name: Build & Deploy to Docker Hub

on:
  release:
    types: [created]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version from release tag
      id: version
      run: |
        VERSION=${GITHUB_REF##*/}
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        echo "Version is $VERSION"

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-api:${{ env.RELEASE_VERSION }} .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/weather-api:${{ env.RELEASE_VERSION }}

    - name: Test /api/hello version
      run: |
        docker run -d -p 5000:5000 --name test-app ${{ secrets.DOCKER_USERNAME }}/weather-api:${{ env.RELEASE_VERSION }}
        sleep 5
        RESPONSE=$(curl -s http://localhost:5000/api/hello | jq -r '.version')
        if [ "$RESPONSE" != "${{ env.RELEASE_VERSION }}" ]; then
          echo "Version mismatch: got $RESPONSE, expected ${{ env.RELEASE_VERSION }}"
          exit 1
        fi
        docker stop test-app
        docker rm test-app

    - name: âœ… Done - Ready for Deployment
      run: echo "Image built, tested and pushed successfully."
